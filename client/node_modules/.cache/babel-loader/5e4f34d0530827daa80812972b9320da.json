{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sam\\\\Programming projects\\\\remote-file-browser\\\\client\\\\src\\\\components\\\\Folder\\\\Folder.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFolder } from '@fortawesome/free-solid-svg-icons';\nimport { faFile } from '@fortawesome/free-regular-svg-icons';\nimport { getItems } from '../../api';\nimport \"./Folder.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Folder() {\n  _s();\n\n  const {\n    pathname\n  } = useLocation();\n  const path = pathname.endsWith(\"/\") ? pathname.slice(0, -1) : pathname;\n  const {\n    name,\n    items\n  } = getItems(path);\n  const [data, setData] = useState([]);\n  const [sortType, setSortType] = useState({\n    value: \"name\",\n    order: true\n  });\n  const [searchValue, setSearchValue] = useState([]);\n  useEffect(() => {\n    if (!name) {\n      console.log(\"files not found\");\n    }\n  });\n  useEffect(() => {\n    setData(items);\n  }, [path]);\n  useEffect(() => {\n    const searchArray = searchValue => {\n      console.log(\"searching on: \" + searchValue);\n      const searchOn = searchValue;\n      const searched = [...items].filter(entry => entry.name.toLowerCase().includes(searchOn));\n      setData(searched);\n    };\n\n    searchArray(searchValue);\n  }, [searchValue]);\n  useEffect(() => {\n    const sortArray = _ref => {\n      let {\n        value,\n        order\n      } = _ref;\n      const types = {\n        name: \"name\",\n        type: \"type\",\n        size: \"size\"\n      };\n      const sortProperty = types[value];\n      let sorted;\n\n      if (sortProperty === 'size') {\n        if (order) {\n          sorted = [...items].sort((a, b) => b[sortProperty] - a[sortProperty]);\n        } else {\n          sorted = [...items].sort((a, b) => a[sortProperty] - b[sortProperty]);\n        }\n      } else {\n        if (order) {\n          sorted = [...items].sort((a, b) => {\n            const thingA = a[sortProperty].toUpperCase();\n            const thingB = b[sortProperty].toUpperCase();\n\n            if (thingA < thingB) {\n              return -1;\n            }\n\n            if (thingA > thingB) {\n              return 1;\n            }\n\n            return 0;\n          });\n        } else {\n          sorted = [...items].sort((a, b) => {\n            const thingA = a[sortProperty].toUpperCase();\n            const thingB = b[sortProperty].toUpperCase();\n\n            if (thingA < thingB) {\n              return 1;\n            }\n\n            if (thingA > thingB) {\n              return -1;\n            }\n\n            return 0;\n          });\n        }\n      }\n\n      setData(sorted);\n    };\n\n    sortArray(sortType);\n  }, [sortType]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"/\", name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"searchBar\",\n      children: \"Search directory\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"searchBar\",\n      name: \"searchBar\",\n      onChange: e => setSearchValue(e.target.value.toLowerCase())\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Box mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Box-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spacer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sort-name hover\",\n          onClick: () => setSortType({ ...sortType,\n            value: \"name\",\n            order: !sortType.order\n          }),\n          children: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sort-type hover\",\n          onClick: () => setSortType({ ...sortType,\n            value: \"type\",\n            order: !sortType.order\n          }),\n          children: \"type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sort-size hover\",\n          onClick: () => setSortType({ ...sortType,\n            value: \"size\",\n            order: !sortType.order\n          }),\n          children: \"size\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: data.map((file, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Box-row py-2 d-flex position-relative\",\n          children: [file.type === \"file\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faFile,\n              className: \"file-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"item-name\",\n              children: file.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"item-type \",\n              children: file.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"item-size\",\n              children: file.size\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true), file.type === \"dir\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faFolder,\n              className: \"folder-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              className: \"item-name router-link\",\n              to: path + \"/\" + file.name,\n              children: file.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"item-type\",\n              children: file.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"item-size\",\n              children: file.size\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Folder, \"RWJJDvO4/vaGQArIpt4riyVbIUc=\", false, function () {\n  return [useLocation];\n});\n\n_c = Folder;\n\nvar _c;\n\n$RefreshReg$(_c, \"Folder\");","map":{"version":3,"sources":["C:/Users/Sam/Programming projects/remote-file-browser/client/src/components/Folder/Folder.js"],"names":["React","useState","useEffect","Link","useLocation","FontAwesomeIcon","faFolder","faFile","getItems","Folder","pathname","path","endsWith","slice","name","items","data","setData","sortType","setSortType","value","order","searchValue","setSearchValue","console","log","searchArray","searchOn","searched","filter","entry","toLowerCase","includes","sortArray","types","type","size","sortProperty","sorted","sort","a","b","thingA","toUpperCase","thingB","e","target","map","file","idx"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFolder } from '@fortawesome/free-solid-svg-icons';\r\nimport { faFile } from '@fortawesome/free-regular-svg-icons';\r\nimport { getItems } from '../../api';\r\nimport \"./Folder.css\";\r\n\r\n\r\nexport default function Folder() {\r\n  const { pathname } = useLocation();\r\n  const path = pathname.endsWith(\"/\") ? pathname.slice(0, -1) : pathname;\r\n  const { name, items } = getItems(path);\r\n  const [data, setData] = useState([]);\r\n  const [sortType, setSortType] = useState({value: \"name\", order: true});\r\n  const [searchValue, setSearchValue] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if(!name) {\r\n      console.log(\"files not found\")\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    setData(items);\r\n  },[path]);\r\n\r\n  useEffect(() => {\r\n    const searchArray = (searchValue) => {\r\n      console.log(\"searching on: \" + searchValue);\r\n      const searchOn = searchValue;\r\n      const searched = [...items].filter((entry) => entry.name.toLowerCase().includes(searchOn));\r\n      setData(searched);\r\n    }\r\n    searchArray(searchValue);\r\n  }, [searchValue]);\r\n  \r\n  useEffect(() => {\r\n    const sortArray = ({ value, order }) => {\r\n      const types = {\r\n        name: \"name\",\r\n        type: \"type\",\r\n        size: \"size\"\r\n      };\r\n      const sortProperty = types[value];\r\n      let sorted;\r\n      if (sortProperty === 'size') {\r\n        if (order) {\r\n          sorted = [...items].sort((a, b) => b[sortProperty] - a[sortProperty]);\r\n        } else {\r\n          sorted = [...items].sort((a, b) => a[sortProperty] - b[sortProperty]);\r\n        }\r\n      } else {\r\n        if (order) {\r\n          sorted = [...items].sort((a, b) => {\r\n            const thingA = a[sortProperty].toUpperCase();\r\n            const thingB = b[sortProperty].toUpperCase();\r\n            if (thingA < thingB) { return -1;}\r\n            if (thingA > thingB) { return 1;}\r\n            return 0;\r\n          });\r\n        } else {\r\n          sorted = [...items].sort((a, b) => {\r\n            const thingA = a[sortProperty].toUpperCase();\r\n            const thingB = b[sortProperty].toUpperCase();\r\n            if (thingA < thingB) { return 1; }\r\n            if (thingA > thingB) { return -1; }\r\n            return 0;\r\n          });\r\n        }\r\n      }\r\n      setData(sorted);\r\n    };\r\n\r\n    sortArray(sortType);\r\n  }, [sortType]);\r\n\r\n  \r\n\r\n  return (\r\n    <>\r\n      <h1>/{name}</h1>\r\n      <label htmlFor=\"searchBar\">Search directory</label>\r\n      <input type=\"text\" id=\"searchBar\" name=\"searchBar\" onChange={(e) => setSearchValue(e.target.value.toLowerCase())}></input>\r\n      <div className='Box mb-3'>\r\n        <div className='Box-header'>\r\n          <div className=\"spacer\"></div>\r\n          <div className=\"sort-name hover\" onClick={() =>setSortType({...sortType, value: \"name\", order: !sortType.order})}>name</div>\r\n          {/* <div className=\"small-name hover\" onClick={() =>setSortType({...sortType, value: \"name\", order: !sortType.order})}>name</div> */}\r\n          <div className=\"sort-type hover\" onClick={() =>setSortType({...sortType, value: \"type\", order: !sortType.order})}>type</div>\r\n          <div className=\"sort-size hover\" onClick={() =>setSortType({...sortType, value: \"size\", order: !sortType.order})}>size</div>\r\n        </div>\r\n        <div >\r\n          {data.map((file, idx) => (\r\n            <div key={idx} className=\"Box-row py-2 d-flex position-relative\">\r\n              {file.type === \"file\" && (\r\n                <>\r\n                    <FontAwesomeIcon icon={faFile} className=\"file-icon\" />\r\n                    <div className='item-name'>{file.name}</div>\r\n                    <div className='item-type '>{file.type}</div>\r\n                    <div className='item-size'>{file.size}</div>\r\n                  \r\n                </>\r\n              )}\r\n              {file.type === \"dir\" && (\r\n                <>\r\n                  <FontAwesomeIcon icon={faFolder} className=\"folder-icon\"/>\r\n                  <Link className='item-name router-link' to={path + \"/\" + file.name}>\r\n                    {file.name}\r\n                  </Link>\r\n                  <div className='item-type'>{file.type}</div>\r\n                  <div className='item-size'>{file.size}</div>\r\n                </>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}