{"ast":null,"code":"const db = {\n  credentials: [{\n    username: \"SamWilliams\",\n    password: \"goTeleport123\"\n  }, {\n    username: \"zbm3\",\n    password: \"goTeleport123\"\n  }, {\n    username: \"hatched\",\n    password: \"goTeleport123\"\n  }, {\n    username: \"ibeckermayer\",\n    password: \"goTeleport123\"\n  }, {\n    username: \"pierrebeaucamp\",\n    password: \"goTeleport123\"\n  }]\n};\nconst directory = {\n  name: \"teleport\",\n  size: 0,\n  // bytes\n  type: \"dir\",\n  items: [{\n    name: \"lib\",\n    size: 0,\n    // bytes\n    type: \"dir\",\n    items: [{\n      name: \"teleport.go\",\n      size: 320000,\n      // bytes\n      type: \"file\"\n    }, {\n      name: \"test.go\",\n      size: 3320000,\n      // bytes\n      type: \"file\"\n    }, {\n      name: \"new\",\n      size: 0,\n      type: \"dir\",\n      items: [{\n        name: \"newThingsuperduperlongfilenameeeeeeeeeeeeeeeeee\",\n        size: 3423231,\n        type: \"file\"\n      }]\n    }]\n  }, {\n    name: \"README.md\",\n    size: 4340000,\n    // bytes\n    type: \"file\"\n  }, {\n    name: \"bin\",\n    size: 0,\n    // bytes\n    type: \"dir\",\n    items: [{\n      name: \"binfile.md\",\n      size: 439798,\n      // bytes\n      type: \"file\"\n    }]\n  }]\n};\nexport function getItems(newPath) {\n  if (newPath.endsWith(\"/\")) {\n    newPath = newPath.slice(0, -1);\n  }\n\n  console.log(\"new path = \" + newPath);\n  let pathArray = newPath.split(\"/\");\n  pathArray.shift();\n  console.log(pathArray);\n  let search = directory;\n\n  for (let i = 1; i < pathArray.length; i++) {\n    search = search.items.filter(dir => dir.type === \"dir\").find(item => item.name === pathArray[i]);\n  }\n\n  return search;\n}\nexport function getRoot() {\n  return \"/\" + directory.name;\n}\nexport function getData(url) {}","map":{"version":3,"sources":["C:/Users/Sam/Programming projects/remote-file-browser/client/src/api.js"],"names":["db","credentials","username","password","directory","name","size","type","items","getItems","newPath","endsWith","slice","console","log","pathArray","split","shift","search","i","length","filter","dir","find","item","getRoot","getData","url"],"mappings":"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","sourcesContent":["\r\n\r\nconst db = {\r\n  credentials: [\r\n    {\r\n      username: \"SamWilliams\",\r\n      password: \"goTeleport123\",\r\n    },\r\n    {\r\n      username: \"zbm3\",\r\n      password: \"goTeleport123\",\r\n    },\r\n    {\r\n      username: \"hatched\",\r\n      password: \"goTeleport123\",\r\n    },\r\n    {\r\n      username: \"ibeckermayer\",\r\n      password: \"goTeleport123\",\r\n    },\r\n    {\r\n      username: \"pierrebeaucamp\",\r\n      password: \"goTeleport123\",\r\n    },\r\n  ]\r\n};\r\n\r\n\r\nconst directory = {\r\n  name: \"teleport\",\r\n  size: 0, // bytes\r\n  type: \"dir\",\r\n  items: [\r\n    {\r\n      name: \"lib\",\r\n      size: 0, // bytes\r\n      type: \"dir\",\r\n      items: [\r\n        {\r\n          name: \"teleport.go\",\r\n          size: 320000, // bytes\r\n          type: \"file\",\r\n        },\r\n        {\r\n          name: \"test.go\",\r\n          size: 3320000, // bytes\r\n          type: \"file\",\r\n        },\r\n        {\r\n          name: \"new\",\r\n          size: 0,\r\n          type: \"dir\",\r\n          items: [\r\n            {\r\n              name: \"newThingsuperduperlongfilenameeeeeeeeeeeeeeeeee\",\r\n              size: 3423231,\r\n              type: \"file\",\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      name: \"README.md\",\r\n      size: 4340000, // bytes\r\n      type: \"file\",\r\n    },\r\n    {\r\n      name: \"bin\",\r\n      size: 0, // bytes\r\n      type: \"dir\",\r\n      items: [\r\n        {\r\n          name: \"binfile.md\",\r\n          size: 439798, // bytes\r\n          type: \"file\",\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nexport function getItems(newPath) {\r\n  if (newPath.endsWith(\"/\")) {\r\n    newPath = newPath.slice(0, -1);\r\n  }\r\n  console.log(\"new path = \" + newPath);\r\n\r\n  let pathArray = newPath.split(\"/\");\r\n  pathArray.shift();\r\n  console.log(pathArray);\r\n  let search = directory;\r\n  for (let i = 1; i < pathArray.length; i++) {\r\n    search = search.items\r\n      .filter((dir) => dir.type === \"dir\")\r\n      .find((item) => item.name === pathArray[i]);\r\n  }\r\n\r\n  return search;\r\n}\r\nexport function getRoot() {\r\n  return \"/\" + directory.name;\r\n}\r\n\r\nexport function getData(url) {}\r\n"]},"metadata":{},"sourceType":"module"}