{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sam\\\\Programming projects\\\\remote-file-browser\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport React, { useEffect, useState } from \"react\";\nimport { Routes, Route, Navigate } from \"react-router-dom\";\nimport { getRoot } from \"./api\";\nimport { Folder, Login } from \"./components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const root = getRoot();\n  const [loginStatus, setLoginStatus] = useState();\n  const [pageLoad, setPageLoad] = useState(false);\n  useEffect(() => {\n    fetch(\"http://localhost:5000/login\", {\n      method: 'GET',\n      'credentials': 'include',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8'\n      }\n    }).then(response => response.json()).then(response => {\n      if (response.loggedIn) {\n        setLoginStatus(true);\n      }\n\n      console.log(response.error);\n      setPageLoad(true);\n    }).catch(error => {\n      console.error('error: ' + error);\n      setPageLoad(true);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"TeleBrowser\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), !loginStatus && pageLoad ? /*#__PURE__*/_jsxDEV(Login, {\n      setLoginStatus: setLoginStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this) : loginStatus && pageLoad ? /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: root\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/:path/*\",\n        element: /*#__PURE__*/_jsxDEV(Folder, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"UtFR4dBpH6jzjugImI125dK3jZg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Sam/Programming projects/remote-file-browser/client/src/App.js"],"names":["React","useEffect","useState","Routes","Route","Navigate","getRoot","Folder","Login","App","root","loginStatus","setLoginStatus","pageLoad","setPageLoad","fetch","method","headers","then","response","json","loggedIn","console","log","error","catch"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,cAA9B;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,IAAI,GAAGJ,OAAO,EAApB;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,EAA9C;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,KAAD,CAAxC;AAIAD,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,KAAK,CAAC,6BAAD,EAAgC;AACnCC,MAAAA,MAAM,EAAE,KAD2B;AAEnC,qBAAe,SAFoB;AAGnCC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAH0B,KAAhC,CAAL,CAMGC,IANH,CAMQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EANpB,EAOCF,IAPD,CAOMC,QAAQ,IAAI;AAChB,UAAIA,QAAQ,CAACE,QAAb,EAAuB;AACrBT,QAAAA,cAAc,CAAC,IAAD,CAAd;AACD;;AACDU,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACK,KAArB;AACAV,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KAbD,EAaGW,KAbH,CAaUD,KAAD,IAAW;AAClBF,MAAAA,OAAO,CAACE,KAAR,CAAc,YAAYA,KAA1B;AACAV,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KAhBD;AAiBD,GAlBQ,EAkBP,EAlBO,CAAT;AAqBA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,4BACE;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA;AAAA;AAAA;AAAA,YAJF,EAKI,CAACH,WAAD,IAAgBE,QAAjB,gBACC,QAAC,KAAD;AAAO,MAAA,cAAc,EAAED;AAAvB;AAAA;AAAA;AAAA;AAAA,YADD,GAEED,WAAW,IAAIE,QAAhB,gBACF,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,OAAO,eAAE,QAAC,QAAD;AAAU,UAAA,EAAE,EAAEH;AAAd;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,OAAO,eAAE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAhC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADE,gBAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GA5CQD,G;;KAAAA,G;AA8CT,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Routes, Route, Navigate } from \"react-router-dom\";\r\nimport { getRoot } from \"./api\";\r\nimport { Folder, Login } from \"./components\";\r\n\r\n\r\nfunction App() {\r\n  const root = getRoot();\r\n  const [loginStatus, setLoginStatus] = useState();\r\n  const [pageLoad, setPageLoad] = useState(false);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:5000/login\", {\r\n      method: 'GET',\r\n      'credentials': 'include',\r\n      headers: {\r\n        'Content-Type': 'application/json;charset=utf-8',\r\n      },\r\n    }).then(response => response.json())\r\n    .then(response => {\r\n      if (response.loggedIn) {\r\n        setLoginStatus(true);\r\n      }\r\n      console.log(response.error)\r\n      setPageLoad(true)\r\n    }).catch((error) => {\r\n      console.error('error: ' + error);\r\n      setPageLoad(true)\r\n    })\r\n  },[])\r\n\r\n\r\n  return (\r\n    <div className=\"app-wrapper\">\r\n      <div>\r\n        <h2>TeleBrowser</h2>\r\n      </div>\r\n      <hr />\r\n      {(!loginStatus && pageLoad) ? \r\n        <Login setLoginStatus={setLoginStatus}/>\r\n      : (loginStatus && pageLoad) ? \r\n      <Routes>\r\n        <Route path=\"/\" element={<Navigate to={root} />} />\r\n        <Route path=\"/:path/*\" element={<Folder />} />\r\n      </Routes>\r\n      : <div>loading</div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}